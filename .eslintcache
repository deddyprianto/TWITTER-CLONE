[{"D:\\TWITTER CLONE\\twitter-clone\\src\\index.js":"1","D:\\TWITTER CLONE\\twitter-clone\\src\\reportWebVitals.js":"2","D:\\TWITTER CLONE\\twitter-clone\\src\\App.js":"3","D:\\TWITTER CLONE\\twitter-clone\\src\\Sidebar.js":"4","D:\\TWITTER CLONE\\twitter-clone\\src\\Feed.js":"5","D:\\TWITTER CLONE\\twitter-clone\\src\\Widgets.js":"6","D:\\TWITTER CLONE\\twitter-clone\\src\\SidebarOptions.js":"7","D:\\TWITTER CLONE\\twitter-clone\\src\\Post.js":"8","D:\\TWITTER CLONE\\twitter-clone\\src\\TweetBox.js":"9","D:\\TWITTER CLONE\\twitter-clone\\src\\Reducer.js":"10","D:\\TWITTER CLONE\\twitter-clone\\src\\StateProvider.js":"11","D:\\TWITTER CLONE\\twitter-clone\\src\\Login.js":"12","D:\\TWITTER CLONE\\twitter-clone\\src\\firebase.js":"13"},{"size":682,"mtime":1610207305120,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":513,"mtime":1610361975560,"results":"17","hashOfConfig":"15"},{"size":1131,"mtime":1610336350615,"results":"18","hashOfConfig":"15"},{"size":1089,"mtime":1610727204051,"results":"19","hashOfConfig":"15"},{"size":771,"mtime":1610793912134,"results":"20","hashOfConfig":"15"},{"size":293,"mtime":1610591023992,"results":"21","hashOfConfig":"15"},{"size":6580,"mtime":1610728971650,"results":"22","hashOfConfig":"15"},{"size":4514,"mtime":1610696128011,"results":"23","hashOfConfig":"15"},{"size":308,"mtime":1610205277021,"results":"24","hashOfConfig":"15"},{"size":428,"mtime":1610207573445,"results":"25","hashOfConfig":"15"},{"size":1624,"mtime":1610784327932,"results":"26","hashOfConfig":"15"},{"size":730,"mtime":1610644265609,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"n0220p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\TWITTER CLONE\\twitter-clone\\src\\index.js",[],["61","62"],"D:\\TWITTER CLONE\\twitter-clone\\src\\reportWebVitals.js",[],"D:\\TWITTER CLONE\\twitter-clone\\src\\App.js",["63"],"import React from \"react\";\nimport \"./App.css\";\nimport Feed from \"./Feed\";\nimport Sidebar from \"./Sidebar\";\nimport Widgets from \"./Widgets\";\nimport { statevalueProvider } from \"./StateProvider\";\nimport Login from \"./Login\";\nfunction App() {\n  const [{ login }, dispatch] = statevalueProvider();\n  return (\n    <div className=\"App\">\n      {!login ? (\n        <Login />\n      ) : (\n        <>\n          <Sidebar />\n          <Feed />\n          <Widgets />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\TWITTER CLONE\\twitter-clone\\src\\Sidebar.js",[],"D:\\TWITTER CLONE\\twitter-clone\\src\\Feed.js",[],"D:\\TWITTER CLONE\\twitter-clone\\src\\Widgets.js",["64","65"],"import React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport {\r\n  TwitterShareButton,\r\n  TwitterTweetEmbed,\r\n  TwitterTimelineEmbed,\r\n  TwitterFollowButton,\r\n  TwitterMentionButton,\r\n} from \"react-twitter-embed\";\r\nimport { Search } from \"@material-ui/icons\";\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"Widgets__Container\">\r\n      <div className=\"input__widgets\">\r\n        <Search />\r\n        <input type=\"text\" placeholder=\"Cari di Twitter\" />\r\n      </div>\r\n      <TwitterTimelineEmbed\r\n        sourceType=\"profile\"\r\n        screenName=\"ddeeddyy1\"\r\n        options={{ height: 500 }}\r\n      />\r\n      <TwitterTweetEmbed tweetId={\"1347567466747031552\"} />\r\n      <TwitterFollowButton screenName={\"ddeeddyy1\"} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","D:\\TWITTER CLONE\\twitter-clone\\src\\SidebarOptions.js",[],["66","67"],"D:\\TWITTER CLONE\\twitter-clone\\src\\Post.js",["68"],"import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport { Avatar, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  VerifiedUser,\r\n  Repeat,\r\n  FavoriteBorder,\r\n  Publish,\r\n  MoreHoriz,\r\n  SentimentVeryDissatisfied,\r\n  PersonAddDisabled,\r\n  PostAdd,\r\n  VolumeOff,\r\n  Block,\r\n  Code,\r\n  Flag,\r\n  Favorite,\r\n  Comment,\r\n  Send,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport db from \"./firebase\";\r\nimport { statevalueProvider } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\nconst Post = forwardRef(({ id, photo, name, text, imageurl, time }, ref) => {\r\n  const [{ login }, dispatch] = statevalueProvider();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [initlike, setInitlike] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [rescomment, setRescomment] = useState([]);\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (id) {\r\n      unsubscribe = db\r\n        .collection(\"data\")\r\n        .doc(id)\r\n        .collection(\"comment\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setRescomment(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [id]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n      input: {\r\n        \"& > *\": {\r\n          margin: theme.spacing(1),\r\n          width: \"25ch\",\r\n        },\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n  }));\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"data\").doc(id).collection(\"comment\").add({\r\n      text: comment,\r\n      username: login.displayName,\r\n      photouser: login.photoURL,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setComment(\"\");\r\n  };\r\n  const handleButtonLike = () => {\r\n    setInitlike(true);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div key=\"\" className=\"post\" ref={ref}>\r\n      <div className=\"post__avatar\">\r\n        <Avatar className={classes.large} src={photo} />\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__header\">\r\n          <div className=\"post__headerText\">\r\n            <h3>{name}</h3>\r\n            <VerifiedUser className=\"post__badge\" />\r\n            <p style={{ color: \"gray\", fontSize: \"10px\" }}>{time}</p>\r\n            <div className=\"icon__container\">\r\n              <IconButton\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                style={{ color: \"white\", marginRight: \"-50px\" }}\r\n              >\r\n                <MoreHoriz />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <SentimentVeryDissatisfied />\r\n                  <p>Not Interested in this Tweet</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <PersonAddDisabled />\r\n                  <p>Unfollow @{name}</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <PostAdd />\r\n                  <p>Add/remove from list</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <VolumeOff />\r\n                  <p>mute @{name}</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Block />\r\n                  <p>Block @{name}</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Code />\r\n                  <p>Embed Tweet</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Flag />\r\n                  <p>Report Tweet</p>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n          <div className=\"post__headerDesc\">\r\n            <p style={{ color: \"white\", fontSize: \"20px\" }}>{text}</p>\r\n          </div>\r\n        </div>\r\n        <img src={imageurl} alt=\"\" className=\"image__post\" />\r\n        <form className=\"inputan__comment\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a comment\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n          <IconButton\r\n            type=\"submit\"\r\n            onClick={handleComment}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <Send fontSize=\"small\" />\r\n          </IconButton>\r\n        </form>\r\n        {/* display your data Comment */}\r\n        <FlipMove>\r\n          {rescomment.map((res) => (\r\n            <div className=\"\">\r\n              <div className=\"post__comment\">\r\n                <div className=\"icon__avatarComment\">\r\n                  <Avatar sizes=\"small\" src={res.photouser} />\r\n                </div>\r\n                <div className=\"post__Commentheader\">\r\n                  <h4>{res.username}</h4>\r\n                </div>\r\n              </div>\r\n              <div className=\"post__Commentfooter\">\r\n                <p>{res.text}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </FlipMove>\r\n\r\n        <div className=\"post__footer\">\r\n          <IconButton style={{ color: \"white\" }}>\r\n            <Comment fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton style={{ color: \"white\" }}>\r\n            <Repeat fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={handleButtonLike} style={{ color: \"white\" }}>\r\n            {initlike ? (\r\n              <Favorite style={{ color: \"red\" }} fontSize=\"small\" />\r\n            ) : (\r\n              <FavoriteBorder fontSize=\"small\" />\r\n            )}\r\n          </IconButton>\r\n          <IconButton style={{ color: \"white\" }}>\r\n            <Publish fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Post;\r\n","D:\\TWITTER CLONE\\twitter-clone\\src\\TweetBox.js",["69","70"],"import React, { useState } from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { Button, Avatar, IconButton } from \"@material-ui/core\";\r\nimport { statevalueProvider } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\nimport {\r\n  PhotoLibrary,\r\n  Gif,\r\n  QuestionAnswer,\r\n  EmojiEmotions,\r\n  InsertInvitation,\r\n} from \"@material-ui/icons\";\r\nimport db, { storage } from \"./firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction TweetBox() {\r\n  const [{ login }, dispatch] = statevalueProvider();\r\n  const [text, setText] = useState(\"\");\r\n  const [imagestring, setImagestring] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    small: {\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    large: {\r\n      width: theme.spacing(7),\r\n      height: theme.spacing(7),\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const handleButtonImage = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImagestring(e.target.files[0]);\r\n    }\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (imagestring) {\r\n      const uploadTask = storage\r\n        .ref(`image/${imagestring.name}`)\r\n        .put(imagestring);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const process = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(process);\r\n        },\r\n        (err) => alert(err),\r\n        () => {\r\n          storage\r\n            .ref(\"image\")\r\n            .child(imagestring.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              const tanggal = new Date();\r\n              const hari = tanggal.toString();\r\n              db.collection(\"data\").add({\r\n                name: login.displayName,\r\n                text: text,\r\n                imageurl: url,\r\n                time: hari,\r\n                photo: login.photoURL,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              });\r\n            });\r\n          setProgress(0);\r\n          setImagestring(null);\r\n          setText(\"\");\r\n        }\r\n      );\r\n    } else {\r\n      const tanggal = new Date();\r\n      const hari = tanggal.toString();\r\n      db.collection(\"data\").add({\r\n        name: login.displayName,\r\n        text: text,\r\n        time: hari,\r\n        imageurl: \"\",\r\n        photo: login.photoURL,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setProgress(0);\r\n      setImagestring(null);\r\n      setText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar className={classes.large} src={login.photoURL} />\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(val) => setText(val.target.value)}\r\n            placeholder={`Apa yg kamu pikirkan ${login.displayName}`}\r\n            className=\"input__text\"\r\n            style={{ color: \"#F3F3F4\" }}\r\n          />\r\n        </div>\r\n        <div className=\"container__proggress\"></div>\r\n        <div className=\"baris__upload\">\r\n          <input\r\n            onChange={handleButtonImage}\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n          />\r\n          <div className=\"icons__button\">\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                <PhotoLibrary style={{ color: \"#50b7f5\" }} />\r\n              </IconButton>\r\n            </label>\r\n            <IconButton>\r\n              <Gif style={{ color: \"#50b7f5\" }} />\r\n            </IconButton>\r\n            <IconButton>\r\n              <QuestionAnswer style={{ color: \"#50b7f5\" }} />\r\n            </IconButton>\r\n            <IconButton>\r\n              <EmojiEmotions style={{ color: \"#50b7f5\" }} />\r\n            </IconButton>\r\n            <IconButton>\r\n              <InsertInvitation style={{ color: \"#50b7f5\" }} />\r\n            </IconButton>\r\n          </div>\r\n          <Button type=\"submit\" className=\"tweetBox__tweetButton\">\r\n            Tweet\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBox;\r\n","D:\\TWITTER CLONE\\twitter-clone\\src\\Reducer.js",[],"D:\\TWITTER CLONE\\twitter-clone\\src\\StateProvider.js",[],"D:\\TWITTER CLONE\\twitter-clone\\src\\Login.js",["71"],"import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport { provider, auth, providerFB } from \"./firebase\";\r\nimport { statevalueProvider } from \"./StateProvider\";\r\nimport { stateawal } from \"./Reducer\";\r\n\r\nfunction Login() {\r\n  const [{ login }, dispatch] = statevalueProvider();\r\n  const handleButtonLogin = async () => {\r\n    try {\r\n      const dataLogin = await auth.signInWithPopup(provider);\r\n      dispatch({\r\n        type: stateawal.STATE_AWAL,\r\n        login: dataLogin.user,\r\n      });\r\n    } catch (error) {\r\n    console.log(error)\r\n    }\r\n  };\r\n  const handleButtonLoginFB = async () => {\r\n    try {\r\n      const dataFb = await auth.signInWithPopup(providerFB);\r\n      dispatch({\r\n        type: stateawal.STATE_AWAL,\r\n        login: dataFb.user,\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Login\">\r\n      <h1 style={{ color: \"white\" }}>Welcome Twitter Login Screen</h1>\r\n      <img className=\"logo__twitter\" src=\"./img/love.png\" alt=\"\" />\r\n      <Button\r\n        className=\"button__login\"\r\n        onClick={handleButtonLogin}\r\n        variant=\"contained\"\r\n      >\r\n        <img src=\"./img/goo.png\" style={{ width: \"40px\" }} alt=\"\" />\r\n        <h4>Login With Google</h4>\r\n      </Button>\r\n      <hr />\r\n      <Button\r\n        className=\"button__loginFb\"\r\n        onClick={handleButtonLoginFB}\r\n        variant=\"contained\"\r\n      >\r\n        <img src=\"./img/logo192.png\" style={{ width: \"30px\" }} alt=\"\" />\r\n        <h4>Login With Facebook</h4>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\TWITTER CLONE\\twitter-clone\\src\\firebase.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":21,"nodeType":"78","messageId":"79","endLine":9,"endColumn":29},{"ruleId":"76","severity":1,"message":"80","line":4,"column":3,"nodeType":"78","messageId":"79","endLine":4,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":23},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"76","severity":1,"message":"77","line":27,"column":21,"nodeType":"78","messageId":"79","endLine":27,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":17,"column":21,"nodeType":"78","messageId":"79","endLine":17,"endColumn":29},{"ruleId":"76","severity":1,"message":"84","line":20,"column":10,"nodeType":"78","messageId":"79","endLine":20,"endColumn":18},{"ruleId":"76","severity":1,"message":"85","line":9,"column":12,"nodeType":"78","messageId":"79","endLine":9,"endColumn":17},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'TwitterShareButton' is defined but never used.","'TwitterMentionButton' is defined but never used.",["86"],["87"],"'progress' is assigned a value but never used.","'login' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]